{"version":3,"sources":["utils.js"],"names":["exclude","source","excludes","result","key","getIndexSyntax","options","config","syntax","_indices","join","_index","getFieldSyntax","fields","field","stored_fields","store_field","getNodeSyntax","nodes","node","getTypeSyntax","_types","_type","optionsUndefined","keys","error","hasOwnProperty","Error","promiseRejectOrCallback","err","callback","reject","promiseResolveOrCallback","resolve","pathAppend","args","filteredArgs","arg","valid","length","charAt","path","toString"],"mappings":"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","sourcesContent":["import path from 'path';\n\n/*\n\tExclude keys from an object.\n*/\nexport function exclude (source, excludes) {\n\tlet result = {};\n\n\tObject.keys(source).forEach(function (key) {\n\t\tif (excludes.indexOf(key) === -1) {\n\t\t\tresult[key] = source[key];\n\t\t}\n\t});\n\n\treturn result;\n}\n\n/*\n\tLooks through request options and lib config data to determine\n\tthe index to use for an operation.\n\n\tSupports (and favors over single index) the multi-index syntax\n\tif an array of index names are supplied (via indices).\n\n\tOutput is formatted as 'indexName' or 'indexName1,indexName2' or ''\n\n\thttp://www.elasticsearch.org/guide/reference/api/multi-index/\n*/\nexport function getIndexSyntax (options = {}, config = {}) {\n\tlet syntax = '';\n\n\tif (options._indices && Array.isArray(options._indices)) {\n\t\tsyntax = options._indices.join(',');\n\t} else if (options._index) {\n\t\tsyntax = options._index;\n\t} else if (config && config._indices && Array.isArray(config._indices)) {\n\t\tsyntax = config._indices.join(',');\n\t} else if (config && config._index) {\n\t\tsyntax = config._index;\n\t}\n\n\treturn syntax;\n}\n\n/*\n\tLooks through request options to determine the field to use for\n\tan operation.\n\n\tSupports (and favors over single field) multi field syntax\n\tif an array of field names are supplied (via fields\n\n\tOutput is formatted as 'fieldName' or 'fieldName1,fieldName2' or ''\n*/\nexport function getFieldSyntax (options = {}) {\n\tlet syntax = '';\n\n\tif (options.fields && Array.isArray(options.fields)) {\n\t\tsyntax = options.fields.join(',');\n\t} else if (options.field) {\n\t\tsyntax = options.field;\n\t}\n\n\tif (options.stored_fields && Array.isArray(options.stored_fields)) {\n\t\tsyntax = options.stored_fields.join(',');\n\t} else if (options.store_field) {\n\t\tsyntax = options.store_field;\n\t}\n\n\treturn syntax;\n}\n\n/*\n\tLooks through request options and lib config data to determine\n\tthe node to use for an operation.\n\n\tSupports (and favors over single node) the multi node syntax\n\tif an array of node names are supplied (via nodes).\n\n\tOutput is formatted as 'nodeName' or 'nodeName1,nodeName2' or ''\n*/\nexport function getNodeSyntax (options = {}, config = {}) {\n\tlet syntax = '';\n\n\tif (options.nodes && Array.isArray(options.nodes)) {\n\t\tsyntax = options.nodes.join(',');\n\t} else if (options.node) {\n\t\tsyntax = options.node;\n\t} else if (config && config.nodes && Array.isArray(config.nodes)) {\n\t\tsyntax = config.nodes.join(',');\n\t} else if (config && config.node) {\n\t\tsyntax = config.node;\n\t}\n\n\treturn syntax;\n}\n\n/*\n\tLooks through request options and lib config data to determine\n\tthe type syntax to use for an operation.\n\n\tSupports (and favors over single type) the multi-type syntax\n\tif an array of type names are supplied (via types).\n\n\tOutput is formatted as 'typeName' or 'typeName1,typeName2' or ''\n*/\nexport function getTypeSyntax (options = {}, config = {}) {\n\tlet syntax = '';\n\n\tif (options._types && Array.isArray(options._types)) {\n\t\tsyntax = options._types.join(',');\n\t} else if (options._type) {\n\t\tsyntax = options._type;\n\t} else if (config && config._types && Array.isArray(config._types)) {\n\t\tsyntax = config._types.join(',');\n\t} else if (config && config._type) {\n\t\tsyntax = config._type;\n\t}\n\n\treturn syntax;\n}\n\n/*\n\tConvenience method for ensuring an expected key exists either in\n\trequest options or lib config data. As the operation iterates\n\tthrough each key supplied in keys, if it is not found as a property\n\tin options or config, the function returns an Error.\n\n\tIf the specified keys are found, false is returned (indicating no\n\toptions are undefined).\n\n\tif '_index' or '_type' is specified, the method will accept the\n\tpluralized versions of those properties without returning an\n\tError.\n*/\nexport function optionsUndefined (options = {}, config = {}, keys) {\n\tlet error;\n\n\tkeys.every(function (key) {\n\t\tif (key === '_index' &&\n\t\t\t\t(options.hasOwnProperty('_indices') ||\n\t\t\t\tconfig.hasOwnProperty('_indices'))) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (key === '_type' &&\n\t\t\t\t(options.hasOwnProperty('_types') ||\n\t\t\t\tconfig.hasOwnProperty('_types'))) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!options.hasOwnProperty(key) && !config.hasOwnProperty(key)) {\n\t\t\terror = new Error(key + ' is required');\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t});\n\n\treturn error || false;\n}\n\nexport function promiseRejectOrCallback (err, callback) {\n\tif (!callback) {\n\t\treturn Promise.reject(err);\n\t}\n\n\treturn callback(err);\n}\n\nexport function promiseResolveOrCallback (result, callback) {\n\tif (!callback) {\n\t\treturn Promise.resolve(result);\n\t}\n\n\treturn callback(null, result);\n}\n\n/*\n\tConvenience method used for building path string used\n\twhen issuing the HTTP/HTTPS request. If the resource param\n\tis undefined, empty or false an empty sting is returned.\n\n\tIf the input resource string has a value, it is returned\n\twith a '/' prepend.\n\n\tpathAppend('kitteh')\n\n\tOutputs: '/kitteh'\n*/\nexport function pathAppend (...args) {\n\tlet filteredArgs = args.filter((arg) => {\n\t\tlet valid = (arg || arg === 0) && typeof arg !== 'undefined';\n\t\treturn valid;\n\t});\n\n\tif (filteredArgs && filteredArgs.length && filteredArgs[0].charAt(0) !== '/') {\n\t\tfilteredArgs[0] = ['/', filteredArgs[0]].join('');\n\t}\n\n\treturn path.join(...(filteredArgs.map((arg) => {\n\t\treturn (arg && arg.toString) ? arg.toString() : arg;\n\t})));\n}\n"],"file":"utils.js"}